name: Android CI/CD

on:
  push:
    branches: [ main, 'devin/*' ]
  pull_request:
    branches: [ main ]

jobs:
  build:
    runs-on: ubuntu-latest
    
    strategy:
      matrix:
        app: [frontend-customer, frontend-staff]
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Set up Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        cache-dependency-path: '${{ matrix.app }}/package-lock.json'
        
    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'
        
    - name: Setup Android SDK
      uses: android-actions/setup-android@v3
      
    - name: Install dependencies
      run: |
        cd ${{ matrix.app }}
        npm ci
        
    - name: Build web app
      run: |
        cd ${{ matrix.app }}
        npm run build
        
    - name: Sync with Capacitor
      run: |
        cd ${{ matrix.app }}
        npx cap sync android
        
    - name: Decode keystore
      run: |
        echo "${{ secrets.ANDROID_KEYSTORE_BASE64_NEW }}" | base64 -d > ${{ matrix.app }}/android/app/keystore.jks
        ls -la ${{ matrix.app }}/android/app/keystore.jks
        
    - name: Validate keystore
      run: |
        cd ${{ matrix.app }}/android
        echo "üîç Validating keystore credentials..."
        if ! keytool -list -keystore app/keystore.jks -storepass ${{ secrets.ANDROID_KEYSTORE_PASSWORD_NEW }} -alias ${{ secrets.KEY_ALIAS_NEW }} > /dev/null 2>&1; then
          echo "‚ùå Keystore validation failed. Possible issues:"
          echo "  - Incorrect ANDROID_KEYSTORE_PASSWORD_NEW"
          echo "  - Incorrect KEY_ALIAS_NEW (expected: yourchoiceice-key)"
          echo "  - Corrupted keystore file"
          echo "üîç Available aliases in keystore:"
          keytool -list -keystore app/keystore.jks -storepass ${{ secrets.ANDROID_KEYSTORE_PASSWORD_NEW }} || echo "Cannot list keystore contents"
          exit 1
        fi
        echo "‚úÖ Keystore validation successful"
      env:
        KEYSTORE_PASSWORD: ${{ secrets.ANDROID_KEYSTORE_PASSWORD_NEW }}
        
    - name: Verify Keystore Path
      run: |
        if [ ! -f "${{ matrix.app }}/android/app/keystore.jks" ]; then
          echo "::error::Keystore not found at ${{ matrix.app }}/android/app/keystore.jks"
          exit 1
        fi
        echo "‚úÖ Keystore found and accessible"
        
    - name: Build debug APK
      run: |
        cd ${{ matrix.app }}/android
        ./gradlew assembleDebug
        
    - name: Build release APK
      run: |
        cd ${{ matrix.app }}/android
        ./gradlew assembleRelease
      env:
        KEYSTORE_FILE: keystore.jks
        KEYSTORE_PASSWORD: ${{ secrets.ANDROID_KEYSTORE_PASSWORD_NEW }}
        KEY_ALIAS: ${{ secrets.KEY_ALIAS_NEW }}
        KEY_PASSWORD: ${{ secrets.ANDROID_KEYSTORE_PASSWORD_NEW }}
        
    - name: Build release AAB
      run: |
        cd ${{ matrix.app }}/android
        ./gradlew bundleRelease
      env:
        KEYSTORE_FILE: keystore.jks
        KEYSTORE_PASSWORD: ${{ secrets.ANDROID_KEYSTORE_PASSWORD_NEW }}
        KEY_ALIAS: ${{ secrets.KEY_ALIAS_NEW }}
        KEY_PASSWORD: ${{ secrets.ANDROID_KEYSTORE_PASSWORD_NEW }}
        
    - name: Upload APK artifacts
      uses: actions/upload-artifact@v4
      with:
        name: ${{ matrix.app }}-apk
        path: |
          ${{ matrix.app }}/android/app/build/outputs/apk/debug/*.apk
          ${{ matrix.app }}/android/app/build/outputs/apk/release/*.apk
          
    - name: Upload AAB artifacts
      uses: actions/upload-artifact@v4
      with:
        name: ${{ matrix.app }}-aab
        path: ${{ matrix.app }}/android/app/build/outputs/bundle/release/*.aab
        
    - name: Inspect Build Artifacts
      run: |
        echo "üì¶ Build artifacts for ${{ matrix.app }}:"
        ls -la ${{ matrix.app }}/android/app/build/outputs/apk/debug/ || echo "No debug APKs found"
        ls -la ${{ matrix.app }}/android/app/build/outputs/apk/release/ || echo "No release APKs found"
        ls -la ${{ matrix.app }}/android/app/build/outputs/bundle/release/ || echo "No release AABs found"
        
    - name: Deploy to Google Play Store
      if: github.ref == 'refs/heads/main'
      uses: r0adkll/upload-google-play@v1
      env:
        NODE_OPTIONS: "--openssl-legacy-provider"
      with:
        serviceAccountJsonPlainText: ${{ secrets.GOOGLE_PLAY_SERVICE_ACCOUNT_JSON_NEW }}
        packageName: com.arcticeicesolutions.${{ matrix.app == 'frontend-customer' && 'customer' || 'staff' }}
        releaseFiles: ${{ matrix.app }}/android/app/build/outputs/bundle/release/*.aab
        track: internal
        status: completed
        inAppUpdatePriority: 2
        userFraction: 1.0
        whatsNewDirectory: ${{ matrix.app }}/android/whatsnew
        mappingFile: ${{ matrix.app }}/android/app/build/outputs/mapping/release/mapping.txt
