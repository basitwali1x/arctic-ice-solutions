name: Android Build & Deploy

on:
  push:
    branches: [ main, devin/* ]
    paths: 
      - 'frontend-customer/**'
      - 'frontend-staff/**'
      - '.github/workflows/android.yml'
  pull_request:
    branches: [ main ]
    paths:
      - 'frontend-customer/**'
      - 'frontend-staff/**'
  workflow_dispatch:

jobs:
  build-android:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        app: [customer, staff]
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          
      - name: Setup pnpm
        uses: pnpm/action-setup@v2
        with:
          version: 8
          
      - name: Setup Java JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'
          
      - name: Setup Android SDK
        uses: android-actions/setup-android@v3
        with:
          api-level: 34
          build-tools: 34.0.0
          
      - name: Accept Android SDK licenses
        run: yes | sdkmanager --licenses
        
      - name: Install dependencies
        run: |
          cd frontend-${{ matrix.app }}
          pnpm install
          
      - name: Build web app
        env:
          VITE_API_URL: https://api.yourchoiceice.com
          VITE_GOOGLE_MAPS_API_KEY: ${{ secrets.GOOGLE_MAPS_API_KEY || '' }}
        run: |
          cd frontend-${{ matrix.app }}
          pnpm build
          
      - name: Sync Capacitor
        run: |
          cd frontend-${{ matrix.app }}
          npx cap sync android
          
      - name: Decode Android keystore
        if: github.ref == 'refs/heads/main'
        run: |
          echo "${{ secrets.ANDROID_KEYSTORE_BASE64 }}" | base64 -d > frontend-${{ matrix.app }}/android/app/yourchoiceice-release.keystore
          
      - name: Build debug APK (for PRs)
        if: github.event_name == 'pull_request'
        run: |
          cd frontend-${{ matrix.app }}/android
          ./gradlew assembleDebug
          
      - name: Build release APK (for main branch)
        if: github.ref == 'refs/heads/main'
        env:
          KEYSTORE_PASSWORD: ${{ secrets.ANDROID_KEYSTORE_PASSWORD }}
          KEY_PASSWORD: ${{ secrets.ANDROID_KEY_PASSWORD }}
          KEYSTORE_ALIAS: ${{ secrets.KEYSTORE_ALIAS }}
        run: |
          cd frontend-${{ matrix.app }}/android
          ./gradlew assembleRelease \
            -Pandroid.injected.signing.store.file=app/yourchoiceice-release.keystore \
            -Pandroid.injected.signing.store.password=$KEYSTORE_PASSWORD \
            -Pandroid.injected.signing.key.alias=$KEYSTORE_ALIAS \
            -Pandroid.injected.signing.key.password=$KEY_PASSWORD
            
      - name: Build release AAB (for Play Store)
        if: github.ref == 'refs/heads/main'
        env:
          KEYSTORE_PASSWORD: ${{ secrets.ANDROID_KEYSTORE_PASSWORD }}
          KEY_PASSWORD: ${{ secrets.ANDROID_KEY_PASSWORD }}
          KEYSTORE_ALIAS: ${{ secrets.KEYSTORE_ALIAS }}
        run: |
          cd frontend-${{ matrix.app }}/android
          ./gradlew bundleRelease \
            -Pandroid.injected.signing.store.file=app/yourchoiceice-release.keystore \
            -Pandroid.injected.signing.store.password=$KEYSTORE_PASSWORD \
            -Pandroid.injected.signing.key.alias=$KEYSTORE_ALIAS \
            -Pandroid.injected.signing.key.password=$KEY_PASSWORD
            
      - name: Upload APK artifacts
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.app }}-apk
          path: |
            frontend-${{ matrix.app }}/android/app/build/outputs/apk/**/*.apk
            frontend-${{ matrix.app }}/android/app/build/outputs/bundle/**/*.aab
          retention-days: 30
          
      - name: Deploy to Firebase App Distribution (Internal Testing)
        if: github.ref == 'refs/heads/main' && secrets.FIREBASE_APP_ID_CUSTOMER && secrets.FIREBASE_APP_ID_STAFF
        env:
          FIREBASE_TOKEN: ${{ secrets.FIREBASE_TOKEN }}
          FIREBASE_APP_ID: ${{ matrix.app == 'customer' && secrets.FIREBASE_APP_ID_CUSTOMER || secrets.FIREBASE_APP_ID_STAFF }}
        run: |
          npm install -g firebase-tools
          firebase appdistribution:distribute \
            frontend-${{ matrix.app }}/android/app/build/outputs/apk/release/app-release.apk \
            --app $FIREBASE_APP_ID \
            --groups "qa-team" \
            --release-notes "Automated build from commit ${{ github.sha }}"
            
      - name: Deploy to Google Play (Internal Track)
        if: github.ref == 'refs/heads/main' && secrets.GOOGLE_PLAY_SERVICE_ACCOUNT_JSON
        uses: r0adkll/upload-google-play@v1
        with:
          serviceAccountJson: ${{ secrets.GOOGLE_PLAY_SERVICE_ACCOUNT_JSON }}
          packageName: com.arcticeicesolutions.${{ matrix.app }}
          releaseFiles: frontend-${{ matrix.app }}/android/app/build/outputs/bundle/release/app-release.aab
          track: internal
          status: completed
          inAppUpdatePriority: 2
          userFraction: 1.0
          whatsNewDirectory: distribution/whatsnew
          mappingFile: frontend-${{ matrix.app }}/android/app/build/outputs/mapping/release/mapping.txt
