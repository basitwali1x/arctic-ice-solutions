name: CI/CD Pipeline

on:
  pull_request:
    branches: [ main, devin/1752750425-arctic-ice-solutions-initial-commit ]
  push:
    branches: [ main, devin/1752750425-arctic-ice-solutions-initial-commit ]

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          
      - name: Setup pnpm
        uses: pnpm/action-setup@v2
        with:
          version: 8
          
      - name: Install frontend dependencies
        run: |
          cd frontend
          pnpm install
          
      - name: Lint frontend
        run: |
          cd frontend
          pnpm lint
          
      - name: Build frontend
        run: |
          cd frontend
          pnpm build
          
      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.12'
          
      - name: Install Poetry
        run: pip install poetry
        
      - name: Install backend dependencies
        run: |
          cd backend
          poetry install
          
  deploy:
    needs: build-and-test
    runs-on: ubuntu-latest
    if: (github.event_name == 'push' && (github.ref == 'refs/heads/main' || github.ref == 'refs/heads/devin/1752750425-arctic-ice-solutions-initial-commit')) || (github.event_name == 'pull_request' && (github.base_ref == 'main' || github.base_ref == 'devin/1752750425-arctic-ice-solutions-initial-commit'))
    steps:
      - uses: actions/checkout@v4
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          
      - name: Setup pnpm
        uses: pnpm/action-setup@v2
        with:
          version: 8
          
      - name: Build frontend for production
        run: |
          cd frontend
          pnpm install
          pnpm build
          
      - name: Deploy to Devin Apps Platform
        env:
          DEVIN_API_KEY: ${{ secrets.DEVIN_API_KEY }}
        run: |
          echo "Triggering Devin deployment session via API..."
          
          # Create deployment prompt for Devin
          DEPLOYMENT_PROMPT="Deploy the frontend application to the existing URL https://ice-management-app-4r16aafs.devinapps.com. Your tasks:
          1. Navigate to the repository directory /home/ubuntu/repos/arctic-ice-solutions
          2. Ensure the frontend build artifacts are ready in frontend/dist/
          3. Use the deploy_frontend command to deploy to the existing URL: deploy_frontend frontend/dist --target-url https://ice-management-app-4r16aafs.devinapps.com
          4. If the --target-url parameter doesn't work, try alternative deployment methods to update the existing deployment
          5. Verify the deployment is successful and the app is accessible at https://ice-management-app-4r16aafs.devinapps.com
          6. Confirm all functionality works including logout and PR #49 changes (separate revenue cards)
          
          Rules:
          1. MUST deploy to the existing URL https://ice-management-app-4r16aafs.devinapps.com - do not create new URLs
          2. Ensure the deployment includes all 49 merged PRs from the main branch
          3. Verify the backend connection to https://app-rawyclbe.fly.dev works properly
          4. Test that logout functionality is visible and working
          5. Never make commits or pushes to the repository - only deploy the existing build"
          
          # Escape the prompt for JSON
          ESCAPED_PROMPT=$(echo "$DEPLOYMENT_PROMPT" | jq -Rs .)
          
          # Call Devin API to trigger deployment session
          RESPONSE=$(curl -s -X POST \
            -H "Authorization: Bearer $DEVIN_API_KEY" \
            -H "Content-Type: application/json" \
            -d "{\"prompt\": $ESCAPED_PROMPT}" \
            "https://api.devin.ai/v1/sessions")
          
          echo "Devin deployment session triggered successfully"
          echo "Response: $RESPONSE"
          
          # Extract session ID for monitoring
          SESSION_ID=$(echo "$RESPONSE" | jq -r '.session_id // empty')
          if [ -n "$SESSION_ID" ]; then
            echo "Devin session ID: $SESSION_ID"
            echo "Monitor deployment at: https://app.devin.ai/sessions/$SESSION_ID"
          fi
